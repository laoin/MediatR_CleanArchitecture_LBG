using Microsoft.AspNetCore.Mvc;
using System.Text.Json;
using System.Text.Json.Serialization;
using static System.Runtime.InteropServices.JavaScript.JSType;

var APPName = "DataConnector";

var builder = WebApplication.CreateSlimBuilder(args);

builder.Services.AddScoped<JsonSerializerOptions>(sp =>
{
    var options = new JsonSerializerOptions
    {
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
        WriteIndented = true,
    };
    options.TypeInfoResolverChain.Insert(0, AppJsonSerializerContext.Default);
    return options;
});

builder.Services.ConfigureHttpJsonOptions(options =>
{
    options.SerializerOptions.TypeInfoResolverChain.Insert(0, AppJsonSerializerContext.Default);
});

// Configuración de Kestrel para HTTPS
builder.WebHost.ConfigureKestrel(options =>
{
    options.ListenAnyIP(5001, listenOptions =>
    {
        listenOptions.UseHttps(); // Habilita HTTPS en el puerto 5001
    });
});

builder.Host.UseSeriLog(APPName);

// Add Health checks endpoints.
builder.Services.AddDefaultHealthChecks();

// Add InHub Endpoints
builder.Services.AddInHubEndpoints(builder.Configuration);

// add Swagger
builder.Services.AddSwagger();

var app = builder.Build();

if (app.Environment.IsDevelopment())
{
    // add endpoint /api/openapi generated by swagger.json from Swagger.
    app.AddSwaggerUIEndpoint();
}

app.UseInHubBaseEndpoints();

// Base route for actions
var actionsApi = app.MapGroup("/api");
actionsApi.MapGet("/UnsubmittedData", () =>
{
    var data = new UnsubmittedData[]
      {
        new UnsubmittedData(
            new string[] { "Michael Smith", "Sandra Smith" },
            "333312340762",
            "Multi-policies",
            "Personal",
            "£44.05",
            "4/4,4/5",
            "Application",
            new DateTime(2023, 7, 30, 16, 15, 0, DateTimeKind.Utc),
            "Policy ownership",
            "29 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Molly Wager" },
            "333312340678",
            "Life Cover",
            "Personal",
            "£23.55",
            "4/4,5/5",
            "Application",
            new DateTime(2023, 7, 29, 13, 45, 0, DateTimeKind.Utc),
            "health & lifestyle details",
            "28 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Gemma Smith" },
            "333312340551",
            "Life & CiC",
            "Personal",
            "£22.32",
            "4/4,3/5",
            "Application",
            new DateTime(2023, 7, 28, 10, 32, 0, DateTimeKind.Utc),
            "Client contact details",
            "27 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Mike Smith" },
            "333312340547",
            "Life cover",
            "Personal",
            "£20.98",
            "4/4,2/5",
            "Application",
            new DateTime(2023, 7, 17, 11, 31, 0, DateTimeKind.Utc),
            "Agent details",
            "14 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Amy Friedman", "Brian Brechin", "Claire White", "Edina Elgin", "Frida Falkirk", "Gary Glasgow", "Harry Hawick", "Lain Inchinnan", "Jack Williams", "James Sands", "Jill Smith", "Mark Roberts", "Mary Jackson", "Mary Smith", "Olga Brady", "Owen Cassidy", "Wayne Colleman" },
            "1100012340234",
            "Multi-policies",
            "Business",
            "£421.90",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 16, 17, 30, 0, DateTimeKind.Utc),
            "Review quote details",
            "13 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Theresa Gold" },
            "333312340309",
            "CiC",
            "Business",
            "£24.88",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 14, 16, 44, 0, DateTimeKind.Utc),
            "Review Quote details",
            "12 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "John Davis", "Emma Davis" },
            "333312340768",
            "Multi-policies",
            "Personal",
            "£37.50",
            "4/4,4/5",
            "Application",
            new DateTime(2023, 7, 30, 16, 15, 0, DateTimeKind.Utc),
            "Policy ownership",
            "29 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Sophie Williams" },
            "333312340683",
            "Life Cover",
            "Personal",
            "£30.00",
            "4/4,5/5",
            "Application",
            new DateTime(2023, 7, 29, 13, 45, 0, DateTimeKind.Utc),
            "health & lifestyle details",
            "28 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Laura Johnson" },
            "333312340558",
            "Life & CiC",
            "Personal",
            "£19.75",
            "4/4,3/5",
            "Application",
            new DateTime(2023, 7, 28, 10, 32, 0, DateTimeKind.Utc),
            "Client contact details",
            "27 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "James Taylor" },
            "333312340542",
            "Life cover",
            "Personal",
            "£29.00",
            "4/4,2/5",
            "Application",
            new DateTime(2023, 7, 17, 11, 31, 0, DateTimeKind.Utc),
            "Agent details",
            "14 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Olivia Martin", "Daniel Moore", "Charlotte Clark", "Grace Green", "Sophia Adams", "Jacob White", "Ethan Harris", "Mia Lewis", "Liam Walker", "Noah King", "Ava Scott", "Lucas Hall", "Isabella Young", "Amelia Allen", "Harper King", "Ella Wright", "Mason Evans" },
            "1100012340240",
            "Multi-policies",
            "Business",
            "£432.00",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 16, 17, 30, 0, DateTimeKind.Utc),
            "Review quote details",
            "13 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Lily Carter" },
            "333312340310",
            "CiC",
            "Business",
            "£28.10",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 14, 16, 44, 0, DateTimeKind.Utc),
            "Review Quote details",
            "12 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Alice Brown", "Tom Brown" },
            "333312340761",
            "Multi-policies",
            "Personal",
            "£34.80",
            "4/4,4/5",
            "Application",
            new DateTime(2023, 7, 30, 16, 15, 0, DateTimeKind.Utc),
            "Policy ownership",
            "29 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Eleanor Wright" },
            "333312340680",
            "Life Cover",
            "Personal",
            "£27.50",
            "4/4,5/5",
            "Application",
            new DateTime(2023, 7, 29, 13, 45, 0, DateTimeKind.Utc),
            "health & lifestyle details",
            "28 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Oliver King" },
            "333312340559",
            "Life & CiC",
            "Personal",
            "£18.00",
            "4/4,3/5",
            "Application",
            new DateTime(2023, 7, 28, 10, 32, 0, DateTimeKind.Utc),
            "Client contact details",
            "27 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Emily Scott" },
            "333312340549",
            "Life cover",
            "Personal",
            "£25.75",
            "4/4,2/5",
            "Application",
            new DateTime(2023, 7, 17, 11, 31, 0, DateTimeKind.Utc),
            "Agent details",
            "14 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "George Lewis", "Harper Hall", "Mia Walker", "Isabella Wright", "Benjamin Green", "Lucas Adams", "Avery Allen", "Lily King", "Ella Carter", "Amelia Thompson", "Ethan Scott", "Sophia Evans", "Zoe Harris", "Noah Clark", "Olivia White", "Jacob Taylor", "Liam Jones" },
            "1100012340230",
            "Multi-policies",
            "Business",
            "£410.00",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 16, 17, 30, 0, DateTimeKind.Utc),
            "Review quote details",
            "13 days",
            "https://www.google.com"
        ),
        new UnsubmittedData(
            new string[] { "Sophia Brown" },
            "333312340318",
            "CiC",
            "Business",
            "£21.75",
            "4/4,0/5",
            "Quote",
            new DateTime(2023, 7, 14, 16, 44, 0, DateTimeKind.Utc),
            "Review Quote details",
            "12 days",
            "https://www.google.com"
        )
      };

    var response = new ResponseData<UnsubmittedData[]>(data, null);
    return Results.Ok(response);
})
.WithName("UnsubmittedData")
.WithOpenApi();

actionsApi.MapGet("/DecisionMadeData", () =>
{
    var data = new DecisionMadeData[]
    {
        new DecisionMadeData(
            new string[] { "Martin Clyde" },
            "666612340001",
            "Life cover",
            "Business",
            "£24.40",
            new DateTime(2024, 8, 8, 14, 30, 0, DateTimeKind.Utc),
            "90 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Siena Sutherland" },
            "666612340003",
            "Life cover",
            "Business",
            "£28.31",
            new DateTime(2024, 8, 8, 10, 25, 0, DateTimeKind.Utc),
            "90 days",
            "Non-standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Emma Conhan" },
            "666612340234",
            "Life & CiC",
            "Personal",
            "£27.78",
            new DateTime(2024, 8, 8, 11, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Jayne Clark-Smith", "Emma Clark-Smith" },
            "666612340111",
            "Life cover",
            "Personal",
            "£30.78",
            new DateTime(2024, 8, 8, 18, 30, 0, DateTimeKind.Utc),
            "83 days",
            "Postponed",
            false
        ),
        new DecisionMadeData(
            new string[] { "Gemma Smith" },
            "666612340451",
            "Life & CiC",
            "Business",
            "£35.55",
            new DateTime(2024, 8, 8, 17, 30, 0, DateTimeKind.Utc),
            "12 hours ago",
            "Declined",
            false
        ),
        new DecisionMadeData(
            new string[] { "Mary Miller" },
            "666612340234",
            "Life cover",
            "Personal",
            "£19.00",
            new DateTime(2024, 8, 8, 19, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Standard (in claim)",
            false
        ),
        new DecisionMadeData(
            new string[] { "Glenda Glasgow" },
            "666612340556",
            "Life cover",
            "Business",
            "£35.50",
            new DateTime(2024, 8, 7, 10, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Non-Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Gary Glasgow", "Glenda Glasgow" },
            "666612340654",
            "Life cover",
            "Personal",
            "£45.00",
            new DateTime(2024, 8, 7, 9, 0, 0, DateTimeKind.Utc),
            "28 days",
            "Non-standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Gary Glasgow" },
            "666612340555",
            "Life & CiC",
            "Personal",
            "£24.40",
            new DateTime(2023, 8, 7, 9, 0, 0, DateTimeKind.Utc),
            "30 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Lisa Moore" },
            "666612340567",
            "Life & CiC",
            "Personal",
            "£45.00",
            new DateTime(2024, 8, 6, 9, 0, 0, DateTimeKind.Utc),
            "Expired",
            "Not taken up (client's decision)",
            false
        ),
        new DecisionMadeData(
            new string[] { "John Smith" },
            "666612340009",
            "Life cover",
            "Business",
            "£22.35",
            new DateTime(2024, 8, 8, 14, 30, 0, DateTimeKind.Utc),
            "90 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Anna Johnson" },
            "666612340012",
            "Life cover",
            "Business",
            "£32.58",
            new DateTime(2024, 8, 8, 10, 25, 0, DateTimeKind.Utc),
            "90 days",
            "Non-standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Olivia Brown" },
            "666612340231",
            "Life & CiC",
            "Personal",
            "£21.33",
            new DateTime(2024, 8, 8, 11, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Emily Davis", "Sophia Davis" },
            "666612340118",
            "Life cover",
            "Personal",
            "£22.75",
            new DateTime(2024, 8, 8, 18, 30, 0, DateTimeKind.Utc),
            "83 days",
            "Postponed",
            false
        ),
        new DecisionMadeData(
            new string[] { "Isabella Taylor" },
            "666612340449",
            "Life & CiC",
            "Business",
            "£26.68",
            new DateTime(2024, 8, 8, 17, 30, 0, DateTimeKind.Utc),
            "12 hours ago",
            "Declined",
            false
        ),
        new DecisionMadeData(
            new string[] { "Charlotte Wilson" },
            "666612340226",
            "Life cover",
            "Personal",
            "£17.50",
            new DateTime(2024, 8, 8, 19, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Standard (in claim)",
            false
        ),
        new DecisionMadeData(
            new string[] { "Mia Harris" },
            "666612340548",
            "Life cover",
            "Business",
            "£40.00",
            new DateTime(2024, 8, 7, 10, 30, 0, DateTimeKind.Utc),
            "30 days",
            "Non-Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "William Thompson", "Ella Thompson" },
            "666612340647",
            "Life cover",
            "Personal",
            "£36.80",
            new DateTime(2024, 8, 7, 9, 0, 0, DateTimeKind.Utc),
            "28 days",
            "Non-standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "James White" },
            "666612340561",
            "Life & CiC",
            "Personal",
            "£29.20",
            new DateTime(2023, 8, 7, 9, 0, 0, DateTimeKind.Utc),
            "30 days",
            "Standard",
            true
        ),
        new DecisionMadeData(
            new string[] { "Amelia Lewis" },
            "666612340572",
            "Life & CiC",
            "Personal",
            "£37.90",
            new DateTime(2024, 8, 6, 9, 0, 0, DateTimeKind.Utc),
            "Expired",
            "Not taken up (client's decision)",
            false
        )
    };

    var response = new ResponseData<DecisionMadeData[]>(data, null);
    return Results.Ok(response);
})
.WithName("DecisionMadeData")
.WithOpenApi();


actionsApi.MapGet("/LivePoliciesData", () =>
{
    {
        var data = new LivePoliciesData[]
    {
    new LivePoliciesData(
        new string[] { "Johnny Jones" },
        "666672539555",
        "CiC",
        "Personal",
        "£21.00",
        new DateTime(2002, 3, 19,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 14, 30, 0, DateTimeKind.Utc),
        "The policy is in claim.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Craig Clinton" },
        "666675559413",
        "Life & CiC",
        "Business",
        "£24.40",
        new DateTime(2023, 6, 27,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 11, 44, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "David Dundee" },
        "666675556713",
        "Life & CiC",
        "Personal",
        "£24.40",
        new DateTime(2023, 7, 1,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 44, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Edna Elgin" },
        "666675555678",
        "Life cover",
        "Business",
        "£29.88",
        new DateTime(2022, 4, 26,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "Two direct debits have been missed.",
        true
    ),
    new LivePoliciesData(
        new string[] { "Jennifer Jones" },
        "666672853888",
        "Life cover",
        "Personal",
        "£22.99",
        new DateTime(2023, 7, 1,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Michael Lee" },
        "666673333331",
        "Life cover",
        "Business",
        "£19.00",
        new DateTime(2023, 6, 26,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "The policy is on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Meghan Morgan" },
        "666672639412",
        "Life cover",
        "Business",
        "£29.88",
        new DateTime(2022, 5, 15,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 10, 58, 10, DateTimeKind.Utc),
        "Three direct debits have been missed, the policy will be cancelled on 15 August 2023.",
        true
    ),
    new LivePoliciesData(
        new string[] { "Siena Velencia" },
        "666672535432",
        "Life cover",
        "Business",
        "£24.40",
        new DateTime(2023, 6, 27,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 10, 58, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Henry Brown" },
        "666672539559",
        "CiC",
        "Personal",
        "£27.50",
        new DateTime(2002, 3, 19,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 14, 30, 0, DateTimeKind.Utc),
        "The policy is in claim.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Oliver Davis" },
        "666675559415",
        "Life & CiC",
        "Business",
        "£30.20",
        new DateTime(2023, 6, 27,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 11, 44, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Mason Harris" },
        "666675556709",
        "Life & CiC",
        "Personal",
        "£17.85",
        new DateTime(2023, 7, 1,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 44, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Ava Johnson" },
        "666675555685",
        "Life cover",
        "Business",
        "£23.45",
        new DateTime(2022, 4, 26,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "Two direct debits have been missed.",
        true
    ),
    new LivePoliciesData(
        new string[] { "Sophia Miller" },
        "666672853885",
        "Life cover",
        "Personal",
        "£20.50",
        new DateTime(2023, 7, 1,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Elijah Moore" },
        "666673333329",
        "Life cover",
        "Business",
        "£22.80",
        new DateTime(2023, 6, 26,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 12, 58, 10, DateTimeKind.Utc),
        "The policy is on risk.",
        false
    ),
    new LivePoliciesData(
        new string[] { "Amelia Anderson" },
        "666672639414",
        "Life cover",
        "Business",
        "£34.50",
        new DateTime(2022, 5, 15,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 10, 58, 10, DateTimeKind.Utc),
        "Three direct debits have been missed, the policy will be cancelled on 15 August 2023.",
        true
    ),
    new LivePoliciesData(
        new string[] { "James Thompson" },
        "666672535424",
        "Life cover",
        "Business",
        "£33.80",
        new DateTime(2023, 6, 27,0,0,0, DateTimeKind.Utc),
        new DateTime(2024, 8, 8, 10, 58, 10, DateTimeKind.Utc),
        "The policy is due to go on risk.",
        false
    )
    };

        var response = new ResponseData<LivePoliciesData[]>(data, null);
        return Results.Ok(response);
    }
})
.WithName("LivePoliciesData")
.WithOpenApi();

actionsApi.MapGet("/ReferredCasesData", () =>
{
    {
        var data = new ReferredCasesData[]
        {
    new ReferredCasesData(
        new string[] { "Charlie Clyde" },
        "666612340321",
        "Life & CiC",
        "Business",
        new DateTime(2024, 8, 8, 12, 10, 0, DateTimeKind.Utc),
        "Medical Consent (AMRA) received.",
        false,
        new ExtraData(
            new TaskSummary[]
            {
                new TaskSummary(
                    "Charlie Clyde",
                    new Task[]
                    {
                        new Task(
                            "Further information requested from Madison Clinic via post on 2 July 2023",
                            "We asked your client's GP for a report via post on 2 July 2023. When this is received, we will notify you here.",
                            "For the quickest response. It's usually best to ask your client to chase Madison Clinic for the report."
                        )
                    }
                )
            },
            new CaseHistory[]
            {
                new CaseHistory(
                    new DateTime(2023, 7, 2, 8, 49, 0, DateTimeKind.Utc),
                    "Further information requested from Madison Clinic via post",
                    null,
                    "Gary Green",
                    "Attention"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 28, 11, 5, 0, DateTimeKind.Utc),
                    "GP report from Madison Clinic received",
                    new DateTime(2023, 6, 15, 9, 14, 0, DateTimeKind.Utc),
                    "Georgia Green",
                    "Completed"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 22, 9, 27, 0, DateTimeKind.Utc),
                    "Further info from Madison Clinc received",
                    new DateTime(2023, 6, 9, 12, 46, 0, DateTimeKind.Utc),
                    "Georgia Green",
                    "Completed"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 10, 8, 33, 0, DateTimeKind.Utc),
                    "GP report requested from Madison Clinic via iGPR",
                    null,
                    "Gary Green",
                    "None"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 8, 9, 10, 0, DateTimeKind.Utc),
                    "Medical Screening &/or Tests received from Medicals Direct",
                    new DateTime(2023, 5, 28, 13, 54, 0, DateTimeKind.Utc),
                    "Gary Green & Georgia Green",
                    "Completed"
                )
            },
            new LinkedPolicies(
                "110038727666",
                "333387270338",
                new Client[]
                {
                    new Client("Charlie Clyde", "666612340765")
                }
            )
        )
    ),
    new ReferredCasesData(
        new string[] { "Dave Dundee" },
        "666612340222",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 8, 7, 30, 0, DateTimeKind.Utc),
        "Further information requested from you via email on 4 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Emma Clark-Smith" },
        "666612340345",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 7, 18, 36, 0, DateTimeKind.Utc),
        "Medical Consent (AMRA) received.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Frida Jones", "Molly Jones" },
        "666612340478",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 7, 14, 41, 0, DateTimeKind.Utc),
        "GP report requested from Holland Clinic via post on 30 June 2023.",
        true,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Gary Glasgow" },
        "666612340978",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 7, 12, 21, 0, DateTimeKind.Utc),
        "Not taken up. Policy has been cancelled as underwriting information was not received.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Jonathan Johnstone" },
        "666612340999",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 6, 14, 55, 0, DateTimeKind.Utc),
        "Declaration of Continued Good Health (DCGH) received on 3 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Iain Inchinnan" },
        "666612340098",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 6, 20, 16, 0, DateTimeKind.Utc),
        "Financial questionnaire received on 3 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Gary Green", "Georgia Green" },
        "666612340765",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 12, 9, 15, 0, DateTimeKind.Utc),
        "Further information requested from Madison Clinic via post on 2 July 2023.",
        false,
        new ExtraData(
            new TaskSummary[]
            {
                new TaskSummary(
                    "Gary Green",
                    new Task[]
                    {
                        new Task(
                            "Further information requested from Madison Clinic via post on 2 July 2023",
                            "We asked your client's GP for a report via post on 2 July 2023. When this is received, we will notify you here.",
                            "For the quickest response. It's usually best to ask your client to chase Madison Clinic for the report."
                        ),
                        new Task(
                            "GP report requested from Madison Clinic vía iGPR on 10 June 2023",
                            "We asked your client's GP for a report via iGPR on 10 June 2023. When this is received, we will notify you here.",
                            "For the quickest response. It's usually best to ask your client to chase Madison Clinic for the report."
                        )
                    }
                ),
                new TaskSummary(
                    "Georgia Green",
                    new Task[] { }
                )
            },
            new CaseHistory[]
            {
                new CaseHistory(
                    new DateTime(2023, 7, 2, 8, 49, 0, DateTimeKind.Utc),
                    "Further information requested from Madison Clinic via post",
                    null,
                    "Gary Green",
                    "Attention"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 28, 11, 5, 0, DateTimeKind.Utc),
                    "GP report from Madison Clinic received",
                    new DateTime(2023, 6, 15, 9, 14, 0, DateTimeKind.Utc),
                    "Georgia Green",
                    "Completed"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 22, 9, 27, 0, DateTimeKind.Utc),
                    "Further info from Madison Clinc received",
                    new DateTime(2023, 6, 9, 12, 46, 0, DateTimeKind.Utc),
                    "Georgia Green",
                    "Completed"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 10, 8, 33, 0, DateTimeKind.Utc),
                    "GP report requested from Madison Clinic via iGPR",
                    null,
                    "Gary Green",
                    "None"
                ),
                new CaseHistory(
                    new DateTime(2023, 6, 8, 9, 10, 0, DateTimeKind.Utc),
                    "Medical Screening &/or Tests received from Medicals Direct",
                    new DateTime(2023, 5, 28, 13, 54, 0, DateTimeKind.Utc),
                    "Gary Green & Georgia Green",
                    "Completed"
                )
            },
            new LinkedPolicies(
                "110038727035",
                "333387270357",
                new Client[]
                {
                    new Client("Gary Green", "666612340765"),
                    new Client("Georgia Green", "666672703572")
                }
            )
        )
    ),
    new ReferredCasesData(
        new string[] { "Lisa More" },
        "666612340678",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 3, 15, 40, 0, DateTimeKind.Utc),
        "GP report requested from Holland Clinic via post on 30 June 2023.",
        true,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Sienna Valencia" },
        "666612340584",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 4, 17, 25, 0, DateTimeKind.Utc),
        "Not taken up. Policy has been cancelled as underwriting information was not received.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Edna Elgin" },
        "666612340219",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 7, 30, 16, 16, 0, DateTimeKind.Utc),
        "Declaration of Continued Good Health (DCGH) received on 3 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Matthew Williams" },
        "666612340192",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 5, 16, 46, 0, DateTimeKind.Utc),
        "Financial questionnaire received on 3 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Noa Anderson" },
        "666612340261",
        "Life cover",
        "Personal",
        new DateTime(2024, 8, 5, 19, 36, 0, DateTimeKind.Utc),
        "Further information requested from Madison Clinic via post on 2 July 2023.",
        false,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "Alan Ayr" },
        "666612340001",
        "Life cover",
        "Business",
        new DateTime(2024, 8, 8, 8, 30, 0, DateTimeKind.Utc),
        "Further information requested from you via email on 4 July 2023.",
        true,
        null // No extra data provided
    ),
    new ReferredCasesData(
        new string[] { "James Cordell" },
        "666612340123",
        "Life & CiC",
        "Personal",
        new DateTime(2024, 8, 3, 17, 22, 0, DateTimeKind.Utc),
        "This policy needs to be referred to our underwriters.",
        true,
        null // No extra data provided
    )
        };

        var response = new ResponseData<ReferredCasesData[]>(data, null);
        return Results.Ok(response);
    }
})
.WithName("ReferredCasesData")
.WithOpenApi();

app.Run();


public record UnsubmittedData(
    string[] ClientName,
    string ReferenceNumber,
    string Product,
    string ProductCategory,
    string Premium,
    string Stage,
    string StageName,
    DateTime DateCreated,
    string CurrentStep,
    string ExpiresIn,
    string ContinueStep
);
public record DecisionMadeData(
    string[] ClientName,
    string Policy,
    string Product,
    string ProductCategory,
    string Premium,
    DateTime LastUpdated,
    string ExpiresIn,
    string Decision,
    bool NeedAttention
);
public record LivePoliciesData(
    string[] ClientName,
    string Policy,
    string Product,
    string ProductCategory,
    string Premium,
    DateTime StartDate,
    DateTime LastUpdated,
    string SummaryIssue,
    bool NeedAttention
);
public record ReferredCasesData(
    string[] ClientName,
    string Policy,
    string Product,
    string ProductCategory,
    DateTime LastUpdated,
    string CurrentStatus,
    bool NeedAttention,
    ExtraData ExtraData
);

public record ExtraData(
    TaskSummary[] TaskSummary,
    CaseHistory[] CaseHistory,
    LinkedPolicies LinkedPolicies
);

public record TaskSummary(
    string ClientName,
    Task[] Task
);

public record Task(
    string ActionName,
    string ActionDescription,
    string NextAction
);

public record CaseHistory(
    DateTime HistoryDate,
    string ActionName,
    DateTime? RequestedOn,
    string RequestedBy,
    string HistoryFlag
);

public record LinkedPolicies(
    string QuoteNumber,
    string PlanNumber,
    Client[] Client
);

public record Client(
    string Name,
    string PolicyNumber
);




public record ResponseData<T>(
    T Data,
    object? Errors
);

[JsonSerializable(typeof(ResponseData<UnsubmittedData>))]
[JsonSerializable(typeof(ResponseData<DecisionMadeData>))]
[JsonSerializable(typeof(ResponseData<LivePoliciesData>))]
[JsonSerializable(typeof(ResponseData<ReferredCasesData>))]


internal partial class AppJsonSerializerContext : JsonSerializerContext
{
}
